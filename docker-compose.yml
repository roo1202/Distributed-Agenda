# version: "3.8"

# services:
#   router:
#     build:
#       context: .
#       dockerfile: docker/router.Dockerfile
#     container_name: router
#     cap_add:
#       - NET_ADMIN
#     networks:
#       default:
#         ipv4_address: 10.0.0.254
#     command: ["sleep", "infinity"]

#   frontend1:
#     build:
#       context: ./frontend
#       dockerfile: Dockerfile
#     container_name: frontend1
#     cap_add:
#       - NET_ADMIN
#     ports:
#       - "3001:3000"
#     networks:
#       - default
#     volumes:
#       - ./frontend:/app
#       - /app/node_modules
#     working_dir: /app
#     command: ["npm", "run", "dev"]

#   frontend2:
#     build:
#       context: ./frontend
#       dockerfile: Dockerfile
#     container_name: frontend2
#     cap_add:
#       - NET_ADMIN
#     ports:
#       - "3002:3000"
#     networks:
#       - default
#     volumes:
#       - ./frontend:/app
#       - /app/node_modules
#     working_dir: /app
#     command: ["npm", "run", "dev"]

#   backend:
#     build:
#       context: ./backend
#       dockerfile: Dockerfile
#     container_name: backend
#     cap_add:
#       - NET_ADMIN
#     ports:
#       - "8000:8000"
#     networks:
#       - default
#     volumes:
#       - ./backend:/app
#     working_dir: /app
#     command: ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000"]

# networks:
#   default:
#     driver: bridge
#     ipam:
#       config:
#         - subnet: 10.0.0.0/24

version: '3.8'

networks:
  server_network:
    driver: bridge
    ipam:
      config:
        - subnet: 192.168.1.0/24
  client_network:
    driver: bridge
    ipam:
      config:
        - subnet: 192.168.2.0/24

services:
  router:
    image: router-image
    container_name: router
    networks:
      server_network:
        ipv4_address: 192.168.1.100
      client_network:
        ipv4_address: 192.168.2.100
    cap_add:
      - NET_ADMIN
    privileged: true
    sysctls:
      net.ipv4.ip_forward: 1
    stdin_open: true
    tty: true
    dns:
      - 192.168.1.10

  server1:
    build:
      context: .
      dockerfile: server/backend/Dockerfile
    image: chord-server
    container_name: server1
    volumes:
      - ./server/backend/app:/app
    environment:
      - LOCAL_IP=192.168.1.2
    networks:
      server_network:
        ipv4_address: 192.168.1.2
    stdin_open: true
    tty: true
    dns:
      - 192.168.1.10
    privileged: true
    cap_add:
      - NET_ADMIN
    ports:
      - "65442:65433" 

  server2:
    build:
      context: .
      dockerfile: server/backend/Dockerfile
    image: chord-server
    container_name: server2
    volumes:
      - ./server/backend/app:/app
    environment:
      - LOCAL_IP=192.168.1.3
    networks:
      server_network:
        ipv4_address: 192.168.1.3
    stdin_open: true
    tty: true
    dns:
      - 192.168.1.10
    privileged: true
    cap_add:
      - NET_ADMIN
    ports:
      - "65443:65433" 

  server3:
    build:
      context: .
      dockerfile: server/backend/Dockerfile
    image: chord-server
    container_name: server3
    volumes:
      - ./server/backend/app:/app
    environment:
      - LOCAL_IP=192.168.1.4
    networks:
      server_network:
        ipv4_address: 192.168.1.4
    stdin_open: true
    tty: true
    dns:
      - 192.168.1.10
    privileged: true
    cap_add:
      - NET_ADMIN
    ports:
      - "65444:65433" 

  # server4:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile.server
  #   image: server-image
  #   container_name: server4
  #   environment:
  #     - LOCAL_IP=192.168.1.5
  #     - JOIN_NODE=192.168.1.2:65433
  #   networks:
  #     server_network:
  #       ipv4_address: 192.168.1.5
  #   stdin_open: true
  #   tty: true
  #   dns:
  #     - 192.168.1.10
  #   privileged: true
  #   cap_add:
  #     - NET_ADMIN
  #   ports:
  #     - "65445:65433" 

  # server5:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile.server
  #   image: server-image
  #   container_name: server5
  #   environment:
  #     - LOCAL_IP=192.168.1.6
  #     - JOIN_NODE=192.168.1.2:65433
  #   networks:
  #     server_network:
  #       ipv4_address: 192.168.1.6
  #   stdin_open: true
  #   tty: true
  #   dns:
  #     - 192.168.1.10
  #   privileged: true
  #   cap_add:
  #     - NET_ADMIN
  #   ports:
  #     - "65446:65433" 

  # client1:
  #   image: client-image
  #   container_name: client1
  #   # volumes:
  #   #   - user_data:/app/user_data
  #   networks:
  #     client_network:
  #       ipv4_address: 192.168.2.2
  #   stdin_open: true
  #   tty: true
  #   dns:
  #     - 192.168.1.10
  #   extra_hosts:
  #     - "gateway:192.168.2.100"
  #   privileged: true
  #   cap_add:
  #     - NET_ADMIN

  # client2:
  #   image: client-image
  #   container_name: client2
  #   # volumes:
  #   #   - user_data:/app/user_data
  #   networks:
  #     client_network:
  #       ipv4_address: 192.168.2.3
  #   stdin_open: true
  #   tty: true
  #   dns:
  #     - 192.168.1.10
  #   extra_hosts:
  #     - "gateway:192.168.2.100"
  #   privileged: true
  #   cap_add:
  #     - NET_ADMIN

  # client3:
  #   image: client-image
  #   container_name: client3
  #   # volumes:
  #   #   - user_data:/app/user_data
  #   networks:
  #     client_network:
  #       ipv4_address: 192.168.2.4
  #   stdin_open: true
  #   tty: true
  #   dns:
  #     - 192.168.1.10
  #   extra_hosts:
  #     - "gateway:192.168.2.100"
  #   privileged: true
  #   cap_add:
  #     - NET_ADMIN
